{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.4",
  "parameters": {

    "prefix": {
      "type": "string",
      "metadata": {
        "description": "Prefix to be assigned to each of the servers"
      }
    },

    "adminUsername": {
      "type": "string",
      "defaultValue": "azure",
      "metadata": {
        "description": "Username for the machines when logging in using SSH or RDP"
      }
    },

    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password to be assigned to the admin user."
      }
    },

    "automateLicense": {
      "type": "securestring",
      "metadata": {
        "description": "License for running Chef Automate"
      }
    },

    "userName": {
      "type": "string",
      "metadata": {
        "description": "Username for the Chef components"
      }
    },

    "userFullname": {
      "type": "string",
      "metadata": {
        "description": "Full name of the user to create"
      }
    },

    "userEmailaddress": {
      "type": "string",
      "metadata": {
        "description": "Email address of the chef user"
      }
    },

    "userPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the specified Chef user"
      }
    },

    "chefOrg": {
      "type": "string",
      "metadata": {
        "description": "Organisation to be created on the Chef server"
      }
    },

    "chefOrgDescription": {
      "type": "string",
      "metadata": {
        "description": "Description for the Chef organisation"
      }
    },

    "networkVNetSize": {
      "type": "string",
      "defaultValue": "10.0.0.0/24"
    },

    "networkSubnetSize": {
      "type": "string",
      "defaultValue": "10.0.0.0/28"
    },

    "ipAddressOrchestrationServer": {
      "type": "string",
      "metadata": {
        "description": "IP address of the orchestration server"
      },
      "defaultValue": "10.0.0.4"
    },

    "ipAddressChefServer": {
      "type": "string",
      "metadata": {
        "description": "IP address of the Chef server"
      },
      "defaultValue": "10.0.0.5"
    },

    "ipAddressAutomateServer": {
      "type": "string",
      "metadata": {
        "description": "IP address of the Automate server"
      },
      "defaultValue": "10.0.0.6"
    },

    "ipAddressBuildNodeStart": {
      "type": "string",
      "metadata": {
        "description": "Starting IP address for the build nodes"
      },
      "defaultValue": "10.0.0.8"
    },

    "vmSizeOrchestrationServer": {
      "type": "string",
      "metadata": {
        "description": "Size of the Orchestration server"
      },
      "defaultValue": "Standard_D1_V2"
    },

    "vmSizeChefServer": {
      "type": "string",
      "metadata": {
        "description": "Size of the Chef server"
      },
      "defaultValue": "Standard_DS2_V2"
    },

    "vmSizeAutomateServer": {
      "type": "string",
      "metadata": {
        "description": "Size of the Automate server"
      },
      "defaultValue": "Standard_DS2_V2"
    },

    "vmSizeWorkstation": {
      "type": "string",
      "metadata": {
        "description": "Size of the Workstation machine"
      },
      "defaultValue": "Standard_DS2_V2"
    },

    "vmSizeBuildNode": {
      "type": "string",
      "metadata": {
        "description": "Size of the Build nodes"
      },
      "defaultValue": "Standard_D1_V2"
    },

    "vmSizeInfrastructureNode": {
      "type": "string",
      "metadata": {
        "description": "Size of the Build nodes"
      },
      "defaultValue": "Standard_DS2_V2"
    },

    "shortUniqueLength": {
      "type": "int",
      "metadata": {
        "description": "The number of the characters to use for the short unique string"
      },
      "defaultValue": 4
    },

    "chefVersion": {
      "type": "string",
      "metadata": {
        "description": "Version of chef server to install"
      },
      "defaultValue": "12.17.15"
    },

    "chefDKVersion": {
      "type": "string",
      "metadata": {
        "description": "Version of ChefDK to use for the build nodes"
      },
      "defaultValue": "2.4.17"
    },

    "chefRepoUrl": {
      "type": "string",
      "metadata": {
        "description": "URL for the repo Zip file"
      },
      "defaultValue": "https://ufmnrk9rhw1k2ftk.blob.core.windows.net/automatefiles/chefrepo.zip"
    },

    "automateVersion": {
      "type": "string",
      "metadata": {
        "description": "Version of automate server to install"
      },
      "defaultValue": "1.7.114"
    },

    "automateVersionChannel": {
      "type": "string",
      "metadata": {
        "description": "Channel from which to download the package. Can be current, stable or beta. Default: stable"
      },
      "defaultValue": "stable",
      "allowedValues": [
        "stable",
        "current",
        "beta"
      ]
    },

    "buildNodesEnabled": {
      "type": "string",
      "metadata": {
        "description": "State if build nodes should be created. Default: yes"
      },
      "defaultValue": "yes",
      "allowedValues": [
        "yes",
        "no"
      ]
    },

    "buildNodeCount": {
      "type": "int",
      "metadata": {
        "description": "Number of build nodes that are required for the deployment"
      },
      "defaultValue": 1
    },

    "infrastructureNodesEnabled": {
      "type": "string",
      "metadata": {
        "description": "State if infrastructure nodes should be created. Default: no"
      },
      "defaultValue": "no",
      "allowedValues": [
        "yes",
        "no"
      ]
    },

    "infrastuctureNodeCount": {
      "type": "int",
      "metadata": {
        "description": "Number of infrastructure nodes to create. Default: 1"
      },
      "defaultValue": 1
    },

    "infrastuctureNodePlatform": {
      "type": "string",
      "metadata": {
        "description": "OS that the node(s) should run. Default: windows"
      },
      "defaultValue": "windows",
      "allowedValues": [
        "windows",
        "linux"
      ]
    },

    "infrastuctureNodeSKU": {
      "type": "string",
      "metadata": {
        "description": "SKU for the chosen platform"
      },
      "defaultValue": "2012-R2-Datacenter"
    },

    "infrastuctureNodeRunList": {
      "type": "string",
      "metadata": {
        "description": "Chef run list to apply to the Infrastructure nodes"
      },
      "defaultValue": ""
    },

    "infrastuctureNodeEnvironment": {
      "type": "string",
      "metadata": {
        "description": "Chef environment that the nodes belong to."
      },
      "defaultValue": ""
    },

    "infrastuctureNodeConfiguration": {
      "type": "string",
      "metadata": {
        "description": "Additional configuration for the chef client on Infrastructure nodes"
      },
      "defaultValue": ""
    },

    "subscriptionPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Used by the PowerShell bootstrap script to set the password for the subscription.  This is so that the workstation::azurecred recipe can configure the SPN correctly"
      },
      "defaultValue": ""
    },

    "subscriptionUsername": {
      "type": "string",
      "metadata": {
        "description": "Username to use to login to the subscription"
      },
      "defaultValue": ""
    },

    "spnDetailsClientId": {
      "type": "string",
      "metadata": {
        "description": "Client ID of the SPN for Test Kitchen to use"
      },
      "defaultValue": ""
    },

    "spnDetailsClientSecret": {
      "type": "securestring",
      "metadata": {
        "description": "Password associated with the Client ID of the SPN"
      },
      "defaultValue": ""
    },

    "spnDetailsTenantId": {
      "type": "string",
      "metadata": {
        "description": "Tenant ID of the SPN for Test Kitchen to use"
      },
      "defaultValue": ""
    },

    "autoShutdownStatus": {
      "type": "string",
      "metadata": {
        "description": "State if auto shutdown should be enabled. Default: Disabled"
      },
      "defaultValue": "Disabled"
    },

    "autoShutdownTimezone": {
      "type": "string",
      "metadata": {
        "description": "Timezone that the schedule should run in"
      },
      "defaultValue": "UTC"
    },

    "autoShutdownTime": {
      "type": "string",
      "metadata": {
        "description": "Time that autoshutdown should occur if enabled. Default: 1900"
      },
      "defaultValue": "1900"
    },

    "unique": {
      "type": "string",
      "metadata": {
        "description": "Unique string to use for the storage account.  If not set it will be generated."
      },
      "defaultValue": "[uniqueString(subscription().subscriptionId, resourceGroup().id, deployment().name, parameters('prefix'))]"
    }
  },
  "variables": {

    "unique": "[parameters('unique')]",
    "uniqueShort": "[substring(variables('unique'), 0, parameters('shortUniqueLength'))]",
    "location": "[resourceGroup().location]",

    "name": {
      "storageAccountName": "[variables('unique')]",
      "virtualNetwork": "[concat(parameters('prefix'), '-', variables('uniqueShort'), '-VNet')]",
      "subnet": "[concat(parameters('prefix'), '-', variables('uniqueShort'), '-Subnet')]",
      "vm": {
        "chef": "[concat(parameters('prefix'), '-chef-', variables('uniqueShort'), '-VM')]",
        "orchestrationserver": "[concat(parameters('prefix'), '-orchestrator-', variables('uniqueShort'), '-VM')]",
        "automate": "[concat(parameters('prefix'), '-automate-', variables('uniqueShort'), '-VM')]",
        "compliance": "[concat(parameters('prefix'), '-compliance-', variables('uniqueShort'), '-VM')]",
        "workstation": "[concat(parameters('prefix'), '-ws-', variables('uniqueShort'), '-VM')]"
      },
      "computer": {
        "chef": "[concat(parameters('prefix'), '-chef-', variables('uniqueShort'))]",
        "orchestrationserver": "[concat(parameters('prefix'), '-orchestrator-', variables('uniqueShort'))]",
        "automate": "[concat(parameters('prefix'), '-automate-', variables('uniqueShort'))]",
        "compliance": "[concat(parameters('prefix'), '-compliance-', variables('uniqueShort'))]",
        "buildnode":  "[concat(parameters('prefix'), '-bn-', variables('uniqueShort'))]",
        "workstation": "[concat(parameters('prefix'), '-ws-', variables('uniqueShort'))]"
      }
    },

    "chef": {
      "version": "[parameters('chefVersion')]",
      "username": "[parameters('userName')]",
      "fullname": "[parameters('userFullname')]",
      "password": "[parameters('userPassword')]",
      "emailaddress": "[parameters('userEmailaddress')]",
      "org": "[toLower(parameters('chefOrg'))]",
      "orgdescription": "[parameters('chefOrgDescription')]"
    },

    "automate": {
      "version": "[parameters('automateVersion')]",
      "channel": "[parameters('automateVersionChannel')]",
      "username": "[parameters('userName')]",
      "fullname": "[parameters('userFullname')]",
      "password": "[parameters('userPassword')]",
      "emailaddress": "[parameters('userEmailaddress')]",
      "license": "[parameters('automateLicense')]",
      "chefdkversion": "[parameters('chefDKVersion')]"
    },

    "workstation": {
      "chefdkversion": "[parameters('chefDKVersion')]"
    },

    "networks": {
      "vnet": "[parameters('networkVNetSize')]",
      "subnet": "[parameters('networkSubnetSize')]"
    },

    "ipaddresses": {
        "orchestration": "[parameters('ipAddressOrchestrationServer')]",
        "chefserver": "[parameters('ipAddressChefServer')]",
        "automateserver": "[parameters('ipAddressAutomateServer')]",
        "buildnodestart": "[parameters('ipAddressBuildNodeStart')]"
    },

    "buildNodeAddressSegments": "[split(variables('ipAddresses').buildnodestart, '.')]",
    "buildNode": {
      "nameprefix": "[variables('name').computer.buildnode]",
      "count": "[parameters('buildNodeCount')]",
      "ip": {
        "base": "[concat(variables('buildNodeAddressSegments')[0], '.', variables('buildNodeAddressSegments')[1], '.', variables('buildNodeAddressSegments')[2])]",
        "offset": "[variables('buildNodeAddressSegments')[3]]"
      }
    },

    "vmSizes": {
        "orchestration": "[parameters('vmSizeOrchestrationServer')]",
        "buildnode": "[parameters('vmSizeBuildNode')]",
        "chefserver": "[parameters('vmSizeChefServer')]",
        "automateserver": "[parameters('vmSizeAutomateServer')]",
        "workstation": "[parameters('vmSizeWorkstation')]",
        "infrastructurenode": "[parameters('vmSizeInfrastructureNode')]"
    },

    "infrastructureNodes": {
      "count": "[parameters('infrastuctureNodeCount')]",
      "platform": "[parameters('infrastuctureNodePlatform')]",
      "sku": "[parameters('infrastuctureNodeSKU')]",
      "runlist": "[parameters('infrastuctureNodeRunList')]",
      "environment": "[parameters('infrastuctureNodeEnvironment')]",
      "configuration": "[parameters('infrastuctureNodeConfiguration')]"
    },

    "spnDetails": {
        "clientId": "[parameters('spnDetailsClientId')]",
        "clientSecret": "[parameters('spnDetailsClientSecret')]",
        "tenantId": "[parameters('spnDetailsTenantId')]"
    },

    "autoShutdown": {
      "shutdown": {
          "status": "[parameters('autoShutdownStatus')]",
          "timezone": "[parameters('autoShutdownTimezone')]",
          "time": "[parameters('autoShutdownTime')]"
        }
    },

    "urls": {
      "storageAccount": "[uri(deployment().properties.templateLink.uri, 'nested/storage-account/storage-account.json')]",
      "vnet": "[uri(deployment().properties.templateLink.uri, 'nested/virtual-network/vnet-nsg.json')]",
      "orchestrationserver": "[uri(deployment().properties.templateLink.uri, 'nested/wrappers/vm-orchestration.json')]",
      "chefserver": "[uri(deployment().properties.templateLink.uri, 'nested/wrappers/vm-publicip-chefserver-scratch.json')]",
      "automateserver": "[uri(deployment().properties.templateLink.uri, 'nested/wrappers/vm-publicip-automateserver-scratch.json')]",
      "buildnode": "[uri(deployment().properties.templateLink.uri, 'nested/wrappers/vm-buildnode.json')]",
      "infranode": "[uri(deployment().properties.templateLink.uri, 'nested/wrappers/vm-publicip-infranode.json')]",
      "workstation": "[uri(deployment().properties.templateLink.uri, 'nested/wrappers/vm-publicip-windows-workstation.json')]",
      "nsg": {
        "chefservers": "[uri(deployment().properties.templateLink.uri, 'nested/security-groups/chef-servers.json')]"
      }
    }

  },
  "resources": [

    {
      "type": "Microsoft.Resources/deployments",
      "name": "AutomateCluster-NSG",
      "apiVersion": "2016-02-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('urls').nsg.chefservers]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "groupName": {
            "value": "AutomateCluster-NSG"
          }
        }
      }
    },

    {
      "type": "Microsoft.Resources/deployments",
      "name": "AutomateCluster-VirtualNetwork",
      "apiVersion": "2016-02-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('urls').vnet]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[variables('name').virtualNetwork]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "vnetAddressPrefix": {
            "value": "[variables('networks').vnet]"
          },
          "subnetName": {
            "value": "[variables('name').subnet]"
          },
          "subnetPrefix": {
            "value": "[variables('networks').subnet]"
          },
          "securityGroupRef": {
            "value": "[reference('Microsoft.Resources/deployments/AutomateCluster-NSG').outputs.nsgId.value]"
          }
        }
      }
    },

    {
      "type": "Microsoft.Resources/deployments",
      "name": "AutomateCluster-OrchestrationServer",
      "apiVersion": "2016-02-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/AutomateCluster-VirtualNetwork"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('urls').orchestrationserver]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "name": {
            "value": "[variables('name').computer.orchestrationserver]"
          },
          "vmSize": {
            "value": "[variables('vmSizes').orchestration]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "subnetRef": {
            "value": "[reference('AutomateCluster-VirtualNetwork').outputs.subnetRef.value]"
          },
          "storageAccountName": {
            "value": "[variables('name').storageAccountName]"
          },
          "imageSku": {
            "value": "16.04.0-LTS"
          },
          "ipAddress": {
            "value": "[variables('ipAddresses').orchestration]"
          },
          "autoShutdown": {
            "value": "[variables('autoShutdown')]"
          }
        }
      }
    },

    {
      "type": "Microsoft.Resources/deployments",
      "name": "[concat('AutomateCluster-BuildNode-', copyIndex(1))]",
      "apiVersion": "2016-02-01",
      "condition": "[equals(parameters('buildNodesEnabled'), 'yes')]",
      "dependsOn": [
        "Microsoft.Resources/deployments/AutomateCluster-OrchestrationServer"
      ],
      "copy": {
        "name": "buildNodes",
        "count": "[parameters('buildNodeCount')]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('urls').buildnode]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "name": {
            "value": "[concat(variables('name').computer.buildnode, '-', copyIndex(1))]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "vmSize": {
            "value": "[variables('vmSizes').buildnode]"
          },
          "subnetRef": {
            "value": "[reference('AutomateCluster-VirtualNetwork').outputs.subnetRef.value]"
          },
          "storageAccountName": {
            "value": "[variables('name').storageAccountName]"
          },
          "imageSku": {
            "value": "16.04.0-LTS"
          },
          "machinePlatform": {
            "value": "ubuntu"
          },
          "ipAddress": {
            "value": "[concat(variables('buildNode').ip.base, '.', copyIndex(int(variables('buildNode').ip.offset)))]"
          },
          "orchestrationServerIPAddress": {
            "value": "[variables('ipAddresses').orchestration]"
          },
          "autoShutdown": {
            "value": "[variables('autoShutdown')]"
          }
        }
      }
    },

    {
      "type": "Microsoft.Resources/deployments",
      "name": "AutomateCluster-ChefServer",
      "apiVersion": "2016-02-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/AutomateCluster-OrchestrationServer"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('urls').chefserver]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "name": {
            "value": "[variables('name').computer.chef]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "vmSize": {
            "value": "[variables('vmSizes').chefserver]"
          },
          "subnetRef": {
            "value": "[reference('AutomateCluster-VirtualNetwork').outputs.subnetRef.value]"
          },
          "storageAccountName": {
            "value": "[variables('name').storageAccountName]"
          },
          "imageSku": {
            "value": "16.04.0-LTS"
          },
          "chefServerAttributes": {
            "value": "[variables('chef')]"
          },
          "ipAddress": {
            "value": "[variables('ipAddresses').chefserver]"
          },
          "orchestrationServerIPAddress": {
            "value": "[variables('ipAddresses').orchestration]"
          },
          "autoShutdown": {
            "value": "[variables('autoShutdown')]"
          }
        }
      }
    },

    {
      "type": "Microsoft.Resources/deployments",
      "name": "AutomateCluster-AutomateServer",
      "apiVersion": "2016-02-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/AutomateCluster-ChefServer",
        "buildNodes"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('urls').automateserver]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "name": {
            "value": "[variables('name').computer.automate]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "vmSize": {
            "value": "[variables('vmSizes').automateserver]"
          },
          "subnetRef": {
            "value": "[reference('AutomateCluster-VirtualNetwork').outputs.subnetRef.value]"
          },
          "storageAccountName": {
            "value": "[variables('name').storageAccountName]"
          },
          "imageSku": {
            "value": "16.04.0-LTS"
          },
          "automateServerAttributes": {
            "value": "[variables('automate')]"
          },
          "chefServerUrl": {
            "value": "[concat('https://', reference('Microsoft.Resources/deployments/AutomateCluster-ChefServer').outputs.fqdn.value, '/organizations/delivery')]"
          },
          "ipAddress": {
            "value": "[variables('ipAddresses').automateserver]"
          },
          "buildNode": {
            "value": "[variables('buildNode')]"
          },
          "orchestrationServerIPAddress": {
            "value": "[variables('ipAddresses').orchestration]"
          },
          "autoShutdown": {
            "value": "[variables('autoShutdown')]"
          }
        }
      }
    },

    {
      "type": "Microsoft.Resources/deployments",
      "name": "AutomateCluster-InfrastructureNodes",
      "apiVersion": "2016-02-01",
      "condition": "[equals(parameters('infrastructureNodesEnabled'), 'yes')]",
      "dependsOn": [
        "Microsoft.Resources/deployments/AutomateCluster-ChefServer"
      ],
      "copy": {
        "name": "nodeCopy",
        "count": "[variables('infrastructureNodes').count]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('urls').infranode]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "name": {
            "value": "[concat(parameters('prefix'), '-', substring(variables('infrastructureNodes').platform, 0, 1), '-', variables('uniqueShort'), '-', copyIndex(1))]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "subnetRef": {
            "value": "[reference('Microsoft.Resources/deployments/AutomateCluster-VirtualNetwork').outputs.subnetRef.value]"
          },
          "storageAccountName": {
            "value": "[variables('name').storageAccountName]"
          },
          "vmSize": {
            "value": "[variables('vmSizes').infrastructurenode]"
          },
          "imageSku": {
            "value": "[variables('infrastructureNodes').sku]"
          },
          "machinePlatform": {
            "value": "[variables('infrastructureNodes').platform]"
          },
          "chefData": {
            "value": {
              "serverUrl": "[reference('Microsoft.Resources/deployments/AutomateCluster-ChefServer').outputs.chefServerUrl.value]",
              "org": "[variables('chef').org]",
              "validator": {
                "name": "[concat(variables('chef').org, '-validator')]",
                "key": "Random string that will be replaced when the subsequent setup script runs"
              },
              "node": {
                "sslVerifyMode": "none",
                "environment": "[variables('infrastructureNodes').environment]",
                "configuration": "[variables('infrastructureNodes').configuration]"
              },
              "runlist": "[variables('infrastructureNodes').runlist]"
            }
          },
          "autoShutdown": {
            "value": "[variables('autoShutdown')]"
          }
        }
      }
    },

    {
      "type": "Microsoft.Resources/deployments",
      "name": "AutomateCluster-Workstation",
      "apiVersion": "2016-02-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/AutomateCluster-ChefServer",
        "Microsoft.Resources/deployments/AutomateCluster-AutomateServer"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('urls').workstation]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "name": {
            "value": "[variables('name').computer.workstation]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "vmSize": {
            "value": "[variables('vmSizes').workstation]"
          },
          "subnetRef": {
            "value": "[reference('AutomateCluster-VirtualNetwork').outputs.subnetRef.value]"
          },
          "storageAccountName": {
            "value": "[variables('name').storageAccountName]"
          },
          "imageSku": {
            "value": "2016-Datacenter"
          },
          "chefRepoUrl": {
            "value": "[parameters('chefRepoUrl')]"
          },
          "chefServerUrl": {
            "value": "[reference('Microsoft.Resources/deployments/AutomateCluster-ChefServer').outputs.url.value]"
          },
          "chefOrg": {
            "value": "[variables('chef').org]"
          },
          "chefUser": {
            "value": "[variables('chef').username]"
          },
          "subscriptionPassword": {
            "value": "[parameters('subscriptionPassword')]"
          },
          "subscriptionUsername": {
            "value": "[parameters('subscriptionUsername')]"
          },
          "spnDetails": {
            "value": "[variables('spnDetails')]"
          },
          "autoShutdown": {
            "value": "[variables('autoShutdown')]"
          },
          "automateServerFQDN": {
            "value": "[reference('Microsoft.Resources/deployments/AutomateCluster-AutomateServer').outputs.fqdn.value]"
          },
          "automateServerUrl": {
            "value": "[reference('Microsoft.Resources/deployments/AutomateCluster-AutomateServer').outputs.url.value]"
          },
          "workstationAttributes": {
            "value": "[variables('workstation')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "storageAccountName": {
      "type": "string",
      "value": "[variables('name').storageAccountName]"
    },
    "shortUnique": {
      "type": "string",
      "value": "[variables('uniqueShort')]"
    },
    "subnetRef": {
      "type": "string",
      "value": "[reference('AutomateCluster-VirtualNetwork').outputs.subnetRef.value]"
    },
    "chefServerFQDN": {
      "type": "string",
      "value": "[reference('Microsoft.Resources/deployments/AutomateCluster-ChefServer').outputs.fqdn.value]"
    },
    "chefServerSSH": {
      "type": "string",
      "value": "[reference('Microsoft.Resources/deployments/AutomateCluster-ChefServer').outputs.ssh.value]"
    },
    "chefServerUrl": {
      "type": "string",
      "value": "[reference('Microsoft.Resources/deployments/AutomateCluster-ChefServer').outputs.url.value]"
    },
    "automateServerFQDN": {
      "type": "string",
      "value": "[reference('Microsoft.Resources/deployments/AutomateCluster-AutomateServer').outputs.fqdn.value]"
    },
    "automateServerSSH": {
      "type": "string",
      "value": "[reference('Microsoft.Resources/deployments/AutomateCluster-AutomateServer').outputs.ssh.value]"
    },
    "automateServerUrl": {
      "type": "string",
      "value": "[reference('Microsoft.Resources/deployments/AutomateCluster-AutomateServer').outputs.url.value]"
    },
    "workstationFQDN": {
      "type": "string",
      "value": "[reference('Microsoft.Resources/deployments/AutomateCluster-Workstation').outputs.fqdn.value]"
    }
  }
}
